version: 2.1

parameters:
  npm-repo:
    type: string
    default: "@voiceflow/general-runtime"
  container-image-url:
    type: string
    default: "168387678261.dkr.ecr.us-east-1.amazonaws.com/general-runtime"
  k8s-asset:
    type: string
    default: "deployment/general-runtime"
  k8s-namespace:
    type: string
    default: "voiceflow-v1" # This is usually voiceflow-v1
  ssh-fingerprint:
    type: string
    default: "61:71:13:8f:00:5f:da:63:a8:0c:6d:f3:b4:b1:17:b3"
  track-component:
    type: string
    default: "general-runtime"

# Reusable YAML chunks
defaults:

  prod_deploy_filters: &prod_deploy_filters
    filters:
      branches:
        only:
          - production

  ignore_prod_deploy_filters: &ignore_prod_deploy_filters
      branches:
        ignore:
          - production

  ignore_prod_break_glass_deploy_filters: &ignore_prod_break_glass_deploy_filters
      branches:
        ignore:
          - production
          - /^break-glass*/

  trying_staging_filters: &trying_staging_filters
    branches:
      only:
        - staging
        - trying

  slack-fail-post-step: &slack-fail-post-step
    post-steps:
      - vfcommon/notify_slack:
          channel: dev_general
          event: fail
          mentions: "@eng_integrations"
          template: basic_fail_1
          branch_pattern: master

orbs:
  vfcommon: voiceflow/common@dev:5a5a340
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:

  install-and-build:
    executor: vfcommon/code-test-executor
    steps:
      - checkout
      - vfcommon/install_node_modules:
          avoid_post_install_scripts: false
      - vfcommon/build:
          container_folder_to_copy: 'build'
          request_remote_docker: true
          run_in_container: true
      # Save workspace for subsequent jobs (i.e. test)
      - persist_to_workspace:
          root: .
          paths:
            - build
            - node_modules

  test:
    executor: vfcommon/code-test-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/voiceflow
      - vfcommon/setup_dynamodb
      - vfcommon/lint_report:
          run_in_background: true
      - vfcommon/lint_dockerfile:
          run_in_background: true
      - vfcommon/dependency_tests:
          run_in_background: true
      - vfcommon/unit_tests:
          run_in_background: true
      - vfcommon/integration_tests:
          wait: true
      - sonarcloud/scan


# When should each job run and what are their dependencies?
workflows:
  # Merge Queue jobs
  e2e:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - vfcommon/test_e2e:
          <<: *slack-fail-post-step
          github_username: GITHUB_USERNAME
          github_token: GITHUB_TOKEN
          creator_app_commit: DEFAULT_COMMIT
          vf_service_commit: CIRCLE_SHA1
          vf_service_name: "general-runtime"
          vf_service_port: "8005"
          context: dev-test
          filters:
            <<: *trying_staging_filters

  # Master (production)
  test-and-release-app:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - install-and-build:
          <<: *slack-fail-post-step
          context: dev-test
          filters:
            <<: *ignore_prod_deploy_filters
      - test:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - install-and-build
          filters:
            <<: *ignore_prod_break_glass_deploy_filters
      - vfcommon/update_track:
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          track_component: << pipeline.parameters.track-component >>
          requires:
            - test
            - install-and-build
          filters:
            <<: *ignore_prod_break_glass_deploy_filters
      - vfcommon/release:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - test
          filters:
            branches:
              only: master
      - vfcommon/sync_branches:
          check_commit_message: "[bugfix]"
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          context: dev-test
          name: sync-branches-bugfix
          requires:
            - test
            - vfcommon/release
          filters:
            branches:
              only: master
      - vfcommon/generate_technical_documentation:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - test
            - vfcommon/release
          filters:
            branches:
              only: master


  # Update Production branch
  deploy-app:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - install-and-build:
          <<: *prod_deploy_filters
          context: dev-test
          name: install-and-build-release
      - vfcommon/build_push_image:
          <<: *prod_deploy_filters
          name: build-push-image
          context: dev-test
          requires:
            - install-and-build-release
          image_repo: << pipeline.parameters.container-image-url >>
          release_pkg: << pipeline.parameters.npm-repo >>
      - vfcommon/update_track:
          <<: *prod_deploy_filters
          context: dev-test
          name: update-track-release
          image_repo: << pipeline.parameters.container-image-url >>
          track_component: << pipeline.parameters.track-component >>
          requires:
            - build-push-image
            - install-and-build-release
      - vfcommon/post_image_push_actions:
          <<: *prod_deploy_filters
          namespace: << pipeline.parameters.k8s-namespace >>
          target: << pipeline.parameters.k8s-asset >>
          tagged: true
          context: dev-test
          requires:
            - update-track-release
      - vfcommon/build_push_image:
          <<: *prod_deploy_filters
          name: build-push-image-e2e
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          dockerfile: "Dockerfile.e2e"
          image_tag: "latest-master-e2e"
          requires:
            - install-and-build-release

  # Cron Production update
  update-production-branch:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "update-production-branch", << pipeline.schedule.name >> ]
    jobs:
      - vfcommon/sync_branches:
          checkout: true
          ssh_key: << pipeline.parameters.ssh-fingerprint >>
          name: sync-branches-scheduled
          context: dev-test
          filters:
            branches:
              only: master
