version: 2.1

parameters:
  npm-repo:
    type: string
    default: "@voiceflow/general-runtime"
  container-image-url:
    type: string
    default: "168387678261.dkr.ecr.us-east-1.amazonaws.com/general-runtime"
  k8s-asset:
    type: string
    default: "deployment/general-runtime"
  k8s-namespace:
    type: string
    default: "voiceflow-v1" # This is usually voiceflow-v1
  ssh-fingerprint:
    type: string
    default: "61:71:13:8f:00:5f:da:63:a8:0c:6d:f3:b4:b1:17:b3"
  track-component:
    type: string
    default: "general-runtime"

# Reusable YAML chunks
defaults:
  prod_deploy_filters: &prod_deploy_filters
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v[0-9]*(\.[0-9]*)*$/

  ignore_autorebase_staging_filters: &ignore_autorebase_staging_filters
    branches:
      ignore:
        - /rebase-pull-request-.*/
        - /cherry-pick-rebase-pull-request-.*/
        - staging

  slack-fail-post-step: &slack-fail-post-step
    post-steps:
      - vfcommon/notify_slack:
          channel: dev_general
          event: fail
          mentions: "@eng_integrations"
          template: basic_fail_1
          branch_pattern: master

orbs:
  vfcommon: voiceflow/common@0.0.201
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:

  e2e-check:
    executor: vfcommon/e2e-executor
    steps:
      - vfcommon/init_e2e_docker:
          checkout: true
          install_node_modules: true
          github_username: GITHUB_USERNAME
          github_token: GITHUB_TOKEN
          cache_prefix: e2e
      # Service dependencies
      - vfcommon/setup_vf_service:
          service_name: server-data-api
          github_username: GITHUB_USERNAME
          github_token: GITHUB_TOKEN
      - vfcommon/check_service_running:
          port: "8011"
      - vfcommon/setup_vf_service:
          service_name: creator-api
          github_username: GITHUB_USERNAME
          github_token: GITHUB_TOKEN
      - vfcommon/check_service_running:
          port: "8003"
      - vfcommon/setup_vf_service:
          service_name: general-service
          github_username: GITHUB_USERNAME
          github_token: GITHUB_TOKEN
      - vfcommon/check_service_running:
          port: "8006"
      - vfcommon/check_e2e:
          port: "8005"

  test:
    executor: vfcommon/code-test-executor
    steps:
      - checkout
      - vfcommon/install_node_modules
      - vfcommon/setup_dynamodb
      - vfcommon/lint_source
      - vfcommon/lint_report
      - vfcommon/lint_dockerfile
      - vfcommon/dependency_tests:
          step_name: Dependency Tests
      - vfcommon/build
      - vfcommon/unit_tests
      - vfcommon/integration_tests
      - sonarcloud/scan

  build-push-image:
    executor: vfcommon/build-executor
    parameters:
      image_repo: 
        description: The container image repository
        type: string
      image_tag: 
        description: The container image tag
        type: string
        default: ""
      release_pkg: 
        description: The npm package name to be released
        type: string
        default: ""
      dockerfile: 
        description: Name of the Dockerfile to build
        type: string
        default: Dockerfile
    steps:
      - vfcommon/build_push_image:
          image_repo: << parameters.image_repo >>
          release_pkg: << parameters.release_pkg >>
          image_tag: << parameters.image_tag >>
          dockerfile: << parameters.dockerfile >>

  post-image-push-actions:
    executor: vfcommon/build-executor
    steps:
      - vfcommon/post_image_push_actions:
          namespace: << pipeline.parameters.k8s-namespace >>
          target: << pipeline.parameters.k8s-asset >>
          tagged: true

  update-track:
    executor: vfcommon/build-executor
    steps:
      - vfcommon/update_track:
          image_repo: << pipeline.parameters.container-image-url >>
          component: << pipeline.parameters.track-component >>

# When should each job run and what are their dependencies?
workflows:
  # Update tracks, avoiding tags
  update-track:
    jobs:
      - update-track:
          context: dev-test
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: master

  # Master (production)
  test-and-release-app:
    jobs:
      - e2e-check:
          <<: *slack-fail-post-step
          context: dev-test
          filters:
            <<: *ignore_autorebase_staging_filters

      - test:
          <<: *slack-fail-post-step
          context: dev-test
          filters:
            <<: *ignore_autorebase_staging_filters

      - vfcommon/release:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - e2e-check
            - test
          filters:
            branches:
              only: master
      - vfcommon/generate_technical_documentation:
          <<: *slack-fail-post-step
          context: dev-test
          requires:
            - test
            - vfcommon/release
          filters:
            branches:
              only: master

  deploy-app:
    jobs:
      - build-push-image:
          <<: *prod_deploy_filters
          name: build-push-image
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          release_pkg: << pipeline.parameters.npm-repo >>
      - update-track:
          <<: *prod_deploy_filters
          context: dev-test
          name: update-track-release
          requires:
            - build-push-image
      - post-image-push-actions:
          <<: *prod_deploy_filters
          context: dev-test
          requires:
            - update-track-release
      - build-push-image:
          <<: *prod_deploy_filters
          name: build-push-image-e2e
          context: dev-test
          image_repo: << pipeline.parameters.container-image-url >>
          dockerfile: "Dockerfile.e2e"
          image_tag: "latest-master-e2e"